level: INFO
dc_id: aws
metrics4j: {
	sources: {
		_collector: "counter"
		org.kairosdb: {
			_tags: {
				host: "localhost_override"
				datacenter: "dc-"${dc_id}
			}
		}
		org.kairosdb.metrics4j.configuration.TestSource: {
			countSomething: {
				_metric-name: "my_metric.count_something"
				_prop: {
					statsd_type: "c"
				}
			}
			chainCount: {
				_collector: "chain"
			}
			countOverride: {
				_formatter: "template"
				_tags: {
					client: "bob"
				}
			}
			countNoOverride: {
				_formatter: "template"
			}
			testContext: {
				_formatter: "template"
				_collector: context_counter
			}
		}
	}

	sinks: {
		slf4j:
		{
			_class: "org.kairosdb.metrics4j.sinks.Slf4JMetricSink"
			log-level: ${level}
		}
	}

	collectors: {
		context_counter:
			{
				_class: "org.kairosdb.metrics4j.collectors.impl.LongCounter"
				reset: true
			}
		counter:
		{
			_class: "org.kairosdb.metrics4j.collectors.impl.LongCounter"
		}
		max:
		{
			_class: "org.kairosdb.metrics4j.collectors.impl.MaxLongGauge"
		}
		timer:
		{
			_class: "org.kairosdb.metrics4j.collectors.impl.SimpleTimerMetric"
		}
		chain:
		{
			_class: "org.kairosdb.metrics4j.collectors.impl.ChainedLongCollector"
			collectors: ["counter", "max"]
			prefixes: ["count.", "max."]
		}
	}

	formatters: {
		template:
		{
			_class: org.kairosdb.metrics4j.formatters.TemplateFormatter
			template: "metric4j.%{className}.%{methodName}.%{field}"
		}
	}

	triggers: {
	}
}

